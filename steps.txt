1. 创建项目 nunu new {项目名} -r "https://gitee.com/go-nunu/nunu-layout-basic.git" {模板}

2. 文件夹结构
.
├── cmd                                                     应用程序入口
│   ├── job
│   │   ├── main.go
│   │   ├── wire.go
│   │   └── wire_gen.go
│   ├── migration
│   │   ├── main.go
│   │   ├── wire.go
│   │   └── wire_gen.go
│   └── server                                              http服务
│       ├── main.go
│       ├── wire.go
│       └── wire_gen.go
├── config  配置文件
│   ├── local.yml
│   └── prod.yml
├── deploy                                                  部署相关文件 docker-compose文件 Dockerfile
├── internal                                                类似于java项目中src/main/java/cn.xjipc.blockchain.app
│   ├── handler                                             controller层
│   │   ├── handler.go
│   │   └── user.go
│   ├── job                                                 定时任务
│   │   └── job.go
│   ├── middleware                                          中间件
│   ├── migration
│   │   └── migration.go
│   ├── model entity
│   │   └── user.go
│   ├── repository                                           dao层
│   │   ├── repository.go
│   │   └── user.go
│   ├── server                                               http服务器，启动http服务，监听端口，处理http请求
│   │   └── http.go
│   └── service                                              service层
│       ├── service.go
│       └── user.go
├── mocks                                                     公共代码，包括配置、日志、http等
│   ├── repository
│   │   └── user.go
│   └── service
│       └── user.go
├── pkg                                                       公共代码，包括配置、日志、http等
├── scripts                                                   脚本文件，用于部署和其他自动化任务。
├── storage                                                   存储文件，如日志文件。
├── test                                                      测试代码。
│   └── server
│       ├── handler
│       │   └── user_test.go
│       ├── repository
│       │   └── user_test.go
│       └── service
│           └── user_test.go
├── web                                                      前端代码。
│   └── index.html
├── Makefile
├── README.md
├── README_zh.md
├── coverage.html
├── go.mod
└── go.sum

3. 自己编写部分
 internal中handler、service、repository、model

 可参考各包中user.go文件编写自己的代码


 4. 修改cmd /server/main.go文件
 此步骤中添加相关controller等

 5. 命令行执行 nunu wire 注入依赖

 6. 命令行执行 nunu run 选择 migration 数据迁移

 7. 命令行执行  nunu run 选择 server 启动服务